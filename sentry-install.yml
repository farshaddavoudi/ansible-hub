---
# Sentry Self-Hosted Installation & Update Playbook
# Designed for Docker/Docker Compose environments
# Optional reverse proxy via sentry_url
# Optional Matrix webhook integration
- name: Install/Update Sentry
  hosts: sentry_servers
  become: yes

  tasks:
    - name: Ensure Sentry directory exists
      file:
        path: "{{ sentry_dir }}"
        state: directory
        mode: 0755

    - name: Checkout Sentry self-hosted repository
      git:
        repo: https://github.com/getsentry/self-hosted.git  # Default repo
        version: "{{ sentry_version }}"
        dest: "{{ sentry_dir }}"
        force: true
      register: sentry_repo

    - name: Remove any existing docker-compose override files that might contain custom images
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ sentry_dir }}/docker-compose.override.yml"
        - "{{ sentry_dir }}/docker-compose.local.yml"
      ignore_errors: true

    - name: Configure .env file
      lineinfile:
        path: "{{ sentry_dir }}/.env"
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      loop:
        - { key: "SENTRY_BIND", value: "{{ sentry_port }}" }
        - { key: "SENTRY_BEACON", value: "False" }
        # Disable external SMTP to avoid registry issues
        - { key: "SENTRY_USE_EXTERNAL_SMTP", value: "false" }
        # Optional Matrix webhook
        - { key: "SENTRY_MATRIX_HOOKSHOT_URL", value: "{{ matrix_hookshot_url | default('') }}" }
        - { key: "SENTRY_MATRIX_ROOM_ID", value: "{{ matrix_room_id | default('') }}" }

    - name: Run Sentry install script if repository changed
      command: ./install.sh --no-user-prompt
      args:
        chdir: "{{ sentry_dir }}"
      when: sentry_repo.after != sentry_repo.before

    - name: Check for and remove problematic SMTP configuration in docker-compose
      lineinfile:
        path: "{{ sentry_dir }}/docker-compose.yml"
        regexp: ".*registry\\.gitlab\\.com.*"
        state: absent
      ignore_errors: true

    - name: Remove incomplete SMTP service from docker-compose if it exists
      blockinfile:
        path: "{{ sentry_dir }}/docker-compose.yml"
        marker: "# {mark} ANSIBLE MANAGED SMTP SERVICE REMOVAL"
        block: ""
        state: absent
      ignore_errors: true

    - name: Remove SMTP service definition entirely if no image is specified
      replace:
        path: "{{ sentry_dir }}/docker-compose.yml"
        regexp: '(?ms)^  smtp:\s*\n((?:    .*\n)*?)(?=^  \S|\Z)'
        replace: ''
      ignore_errors: true

    - name: Add standard SMTP service if needed
      blockinfile:
        path: "{{ sentry_dir }}/docker-compose.yml"
        marker: "# {mark} ANSIBLE MANAGED SMTP SERVICE"
        insertafter: "^services:"
        block: |2
            smtp:
              image: mailhog/mailhog:latest
              ports:
                - "1025:1025"
                - "8025:8025"
              restart: unless-stopped
        state: present
      when: sentry_enable_smtp | default(false)

    - name: Create required Docker volumes for Sentry
      docker_volume:
        name: "{{ item }}"
        state: present
      loop:
        - sentry-data
        - sentry-postgres
        - sentry-redis
        - sentry-zookeeper
        - sentry-kafka
        - sentry-clickhouse
        - sentry-symbolicator

    - name: Ensure Sentry is running before configuration
      docker_compose:
        project_src: "{{ sentry_dir }}"
        remove_orphans: true
        state: present

    - name: Wait for Sentry config.yml to be created
      wait_for:
        path: "{{ sentry_dir }}/sentry/config.yml"
        timeout: 300
      when: sentry_url is defined

    - name: Configure sentry config.yml for external URL (reverse proxy)
      lineinfile:
        path: "{{ sentry_dir }}/sentry/config.yml"
        regexp: "^#?\\s*system.url-prefix:"
        line: "system.url-prefix: {{ sentry_url }}"
      when: sentry_url is defined
      notify: Restart Sentry

    - name: Start Sentry docker-compose stack
      docker_compose:
        project_src: "{{ sentry_dir }}"
        remove_orphans: true
        state: present

    - name: Create Sentry superusers
      command: >
        docker-compose run --rm web createuser
          --email "{{ item.email }}"
          --password "{{ item.password }}"
          --superuser
          --no-input
      args:
        chdir: "{{ sentry_dir }}"
      loop: "{{ sentry_superusers }}"
      ignore_errors: true

  handlers:
    - name: Restart Sentry
      docker_compose:
        project_src: "{{ sentry_dir }}"
        remove_orphans: true
        state: present
        restart: true
