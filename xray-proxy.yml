---
- name: Install and configure Xray proxy with global system proxy
  hosts: sentry_servers
  become: yes

  vars:
    xray_enabled: true # set false to disable proxy
    proxy_port: 1080
    no_proxy_list: "127.0.0.1,localhost,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12"
    xray_config: |
      {
        "inbounds": [
          {
            "port": {{ proxy_port }},
            "listen": "127.0.0.1",
            "protocol": "socks"
          }
        ],
        "outbounds": [
          {
            "protocol": "vmess",
            "settings": {
              "vnext": [
                {
                  "address": "www.esfahanrestaurant.ir",
                  "port": 443,
                  "users": [
                    { "id": "91e36299-839a-43e1-874c-df3382c3a805", "alterId": 0, "security": "auto" }
                  ]
                }
              ]
            }
          }
        ]
      }

  roles:
    - apt-fix

  tasks:
    - name: Fix APT repository GPG keys
      shell: |
        # Remove problematic Kubernetes repository if it exists
        rm -f /etc/apt/sources.list.d/kubernetes.list
        # Update package cache ignoring GPG errors for now
        apt-get update --allow-unauthenticated || true
      ignore_errors: yes

    - name: Install dependencies
      apt:
        name: [curl, unzip]
        update_cache: false
        allow_unauthenticated: yes

    - name: Install Xray
      shell: |
        # Download and run Xray installation script
        curl -L https://raw.githubusercontent.com/XTLS/Xray-install/main/install-release.sh -o /tmp/install-xray.sh
        chmod +x /tmp/install-xray.sh
        bash /tmp/install-xray.sh install --version latest
      args:
        executable: /bin/bash
        creates: /usr/local/bin/xray
      register: xray_install_result

    - name: Debug - Show Xray installation output
      debug:
        var: xray_install_result

    - name: Verify Xray binary installation
      stat:
        path: /usr/local/bin/xray
      register: xray_binary_check

    - name: Alternative Xray installation if first method failed
      block:
        - name: Copy local Xray archive to target
          copy:
            src: files/xtray-linux-64-v25.8.3.zip
            dest: /tmp/xray.zip
            mode: '0644'

        - name: Extract Xray binary
          unarchive:
            src: /tmp/xray.zip
            dest: /tmp/
            remote_src: yes

        - name: Install Xray binary
          copy:
            src: /tmp/xray
            dest: /usr/local/bin/xray
            mode: '0755'
            owner: root
            group: root
            remote_src: yes

        - name: Create Xray directories
          file:
            path: "{{ item }}"
            state: directory
            owner: root
            group: root
            mode: '0755'
          loop:
            - /usr/local/etc/xray
            - /var/log/xray
      when: not xray_binary_check.stat.exists

    - name: Check what Xray services were created
      shell: systemctl list-unit-files | grep -i xray
      register: xray_services
      ignore_errors: yes

    - name: Debug - Show available Xray services
      debug:
        var: xray_services.stdout_lines

    - name: Check if Xray binary was installed
      stat:
        path: /usr/local/bin/xray
      register: xray_binary

    - name: Debug - Xray binary status
      debug:
        var: xray_binary

    - name: Create Xray systemd service file (since script didn't create it)
      copy:
        dest: /etc/systemd/system/xray.service
        content: |
          [Unit]
          Description=Xray Service
          Documentation=https://github.com/xtls
          After=network.target nss-lookup.target

          [Service]
          User=nobody
          CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
          AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
          NoNewPrivileges=true
          ExecStart=/usr/local/bin/xray run -config /usr/local/etc/xray/config.json
          Restart=on-failure
          RestartPreventExitStatus=23

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'
      when: xray_binary.stat.exists

    - name: Reload systemd daemon after Xray installation
      systemd:
        daemon_reload: yes

    - name: Create Xray configuration directory
      file:
        path: /usr/local/etc/xray
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Configure Xray
      copy:
        dest: /usr/local/etc/xray/config.json
        content: "{{ xray_config }}"
        owner: root
        group: root
        mode: '0644'

    - name: Enable or disable Xray service
      systemd:
        name: xray
        state: "{{ 'started' if xray_enabled else 'stopped' }}"
        enabled: "{{ xray_enabled }}"
        daemon_reload: yes

    - name: Configure global proxy environment variables
      copy:
        dest: /etc/profile.d/proxy.sh
        content: |
          if [ "{{ xray_enabled }}" = "True" ]; then
            export http_proxy="http://127.0.0.1:{{ proxy_port }}"
            export https_proxy="http://127.0.0.1:{{ proxy_port }}"
            export all_proxy="socks5://127.0.0.1:{{ proxy_port }}"
            export no_proxy="{{ no_proxy_list }}"
          else
            unset http_proxy
            unset https_proxy
            unset all_proxy
            unset no_proxy
          fi
        mode: '0644'

    - name: Configure systemd global proxy (for services like Docker)
      copy:
        dest: /etc/systemd/system.conf.d/proxy.conf
        content: |
          [Manager]
          DefaultEnvironment="http_proxy=http://127.0.0.1:{{ proxy_port }}" \
                             "https_proxy=http://127.0.0.1:{{ proxy_port }}" \
                             "all_proxy=socks5://127.0.0.1:{{ proxy_port }}" \
                             "no_proxy={{ no_proxy_list }}"
      notify: Reload systemd

  handlers:
    - name: Reload systemd
      command: systemctl daemon-reexec
